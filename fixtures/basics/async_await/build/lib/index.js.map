{"version":3,"file":"./index.js","sources":["../../lib/async_await.esc"],"sourcesContent":["// Basic async function\nexport async fn fetchData(url: string) {\n    return \"data from \" ++ url\n}\n\n// Async function with await\ndeclare fn fetch(url: string) -\u003e Promise\u003cstring, Error\u003e\n\nexport async fn fetchWithAwait(url: string) -\u003e Promise\u003cstring, string\u003e {\n    val data = await fetch(url)\n    return data\n}\n\n// Async function with error handling\nexport async fn fetchWithError(shouldError: boolean) {\n    if shouldError {\n        throw \"Something went wrong\"\n    }\n    return \"success\"\n}\n\n// Async function with multiple awaits\nexport async fn fetchMultiple(url1: string, url2: string) {\n    val data1 = await fetch(url1)\n    val data2 = await fetch(url2)\n    return data1 ++ \" and \" ++ data2\n}\n\n// Async function with conditional await\nexport async fn conditionalFetch(useCache: boolean, url: string) {\n    if useCache {\n        return \"cached data\"\n    } else {\n        val data = await fetch(url)\n        return data\n    }\n}\n"],"names":[],"mappings":"AACA,gCAA0B;QAAA,AAAA;EACtB,OAAO,AAAA,eAAgB;;AAM3B,qCAA+B;QAAA,AAAA;QACvB,AAAA,OAAO,MAAM,AAAA,MAAM;EACvB,OAAO;;AAIX,qCAA+B;QAAA,AAAA;EAAuB,IAAA,AAAA;EAAA,IAC/C;IACC,IAAA,AAAA;;IAAA;;EAF8C,UAE9C,VAF8C;EAIlD,OAAO;;AAIX,oCAA8B,OAAc;QAAd,AAAA;QAAc,AAAA;QACpC,AAAA,QAAQ,MAAM,AAAA,MAAM;QACpB,AAAA,QAAQ,MAAM,AAAA,MAAM;EACxB,OAAO,AAAA,AAAA,QAAS,UAAW;;AAI/B,uCAAiC,OAAmB;QAAnB,AAAA;QAAmB,AAAA;EAAc,IAAA,AAAA;EAAA,IAC3D;IACC,OAAO;IAAP;;;;;;EAF0D,QAItD,AAAA,OAAO,MAAM,AAAA,MAAM,zBACvB,OAAO,PAAP,FAL0D,AAAA"}