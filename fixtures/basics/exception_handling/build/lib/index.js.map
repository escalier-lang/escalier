{"version":3,"file":"./index.js","sources":["../../lib/exception_handling.esc"],"sourcesContent":["// Basic throw expressions\nexport val simpleThrow = throw \"Something went wrong\"\n\n// Throw with error object\nexport val errorThrow = throw {message: \"Custom error\", code: 500}\n\n// Throw in conditional expression\nexport fn getValueOrThrow(value: string) {\n    return if value != \"\" { value } else { throw Error(\"value is empty\") }\n}\n\n// Throw in function expression\nexport val throwingFunc = fn(condition: boolean) {\n    if condition {\n        return \"success\"\n    } else {\n        return throw Error(\"failure\")\n    }\n}\n\nexport fn throwTypeIsWrong(value: string) -\u003e undefined throws string {\n    if value != \"\" { value } else { throw Error(\"value is empty\") }\n}\n"],"names":[],"mappings":"AACyB,IAAA,AAAA;;aAAd,AAAA,cAAc;AAGD,IAAA,AAAA;;aAAb,AAAA,aAAa;AAGxB,gCAA0B;QAAA,AAAA;EAChB,IAAA,AAAA;EAAA,IAAI,AAAA,SAAS;IAAK;;;;;;SAAlB,GAAkB,RAAe,IAAA,AAAA,JAAA,KAAjC,GAAiC,VAAvC,OAAM;;aAIC,AAAA,eAAe,UAAG;QAAA,AAAA;EAAqB,IAAA,AAAA;EAAA,IAC3C;IACC,OAAO;IAAP;;;;;;;EAF0C,EAInC,IAAA,AAAA,JAAP,OAAO,PAAP,FAJ0C,AAAA;;AAQlD,iCAA2B;QAAA,AAAA;EAA2C,IAAA,AAAA;EAAA,IAC/D,AAAA,SAAS;IAAK;;;;;;EADiD,WACjD,TAAe,IAAA,AAAA,JAAA,FADkC,WAClC,XADkC"}