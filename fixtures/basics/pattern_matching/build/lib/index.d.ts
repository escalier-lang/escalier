declare type Point = {x: number, y: number};
declare const num1: number;
export declare const literalMatch: "one" | "two" | "five" | "other";
declare let num2: number;
export declare const variableMatch: number;
export declare const tupleValue: [number, number, number];
export declare const tupleMatch: number | 0;
export declare const objectValue: Point;
export declare const objectMatch: number | 0;
export declare const objectRename: number | 0;
export declare const nestedValue: {point: [number, number]};
export declare const nestedMatch: number | 0;
declare const tuple2: [number, number];
export declare const guardMatch: "equal" | "not equal";
declare const str: string;
export declare const multiCase: "greeting" | "salutation" | "farewell" | "unknown";
declare const bool: boolean;
export declare const boolMatch: "yes" | "no";
declare const num3: number;
export declare const mixedMatch: "one" | "two" | string;
export declare const longTuple: [number, number, number];
export declare const tupleRestMatch: [number, number] | 0;
declare type ExtendedPoint = {x: number, y: number, z: number, name: string};
export declare const extendedPoint: ExtendedPoint;
export declare const objectRestMatch: {z: number, name: string} | 0;
