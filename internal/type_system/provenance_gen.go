// Code generated by tools/gen_provenance.go; DO NOT EDIT.

package type_system

import "github.com/escalier-lang/escalier/internal/provenance"

func (t *TypeVarType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *TypeRefType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *PrimType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *LitType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *UniqueSymbolType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *UnknownType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *NeverType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *GlobalThisType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *FuncType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *ObjectType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *TupleType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *RestSpreadType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *UnionType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *IntersectionType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *KeyOfType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *IndexType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *CondType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *InferType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *WildcardType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *ExtractorType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *TemplateLitType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}

func (t *IntrinsicType) WithProvenance(p provenance.Provenance) Type {
	result := *t // Create a copy of the struct
	result.provenance = p
	return &result
}
