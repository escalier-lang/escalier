// Code generated by tools/gen_ast/gen_gen_ast.go; DO NOT EDIT.

package ast

func (node *IdentPat) Span() Span             { return node.span }
func (node *IdentPat) InferredType() Type     { return node.inferredType }
func (node *IdentPat) SetInferredType(t Type) { node.inferredType = t }

func (node *ObjKeyValuePat) Span() Span             { return node.span }
func (node *ObjKeyValuePat) InferredType() Type     { return node.inferredType }
func (node *ObjKeyValuePat) SetInferredType(t Type) { node.inferredType = t }

func (node *ObjectPat) Span() Span             { return node.span }
func (node *ObjectPat) InferredType() Type     { return node.inferredType }
func (node *ObjectPat) SetInferredType(t Type) { node.inferredType = t }

func (node *TuplePat) Span() Span             { return node.span }
func (node *TuplePat) InferredType() Type     { return node.inferredType }
func (node *TuplePat) SetInferredType(t Type) { node.inferredType = t }

func (node *ExtractorPat) Span() Span             { return node.span }
func (node *ExtractorPat) InferredType() Type     { return node.inferredType }
func (node *ExtractorPat) SetInferredType(t Type) { node.inferredType = t }

func (node *RestPat) Span() Span             { return node.span }
func (node *RestPat) InferredType() Type     { return node.inferredType }
func (node *RestPat) SetInferredType(t Type) { node.inferredType = t }

func (node *LitPat) Span() Span             { return node.span }
func (node *LitPat) InferredType() Type     { return node.inferredType }
func (node *LitPat) SetInferredType(t Type) { node.inferredType = t }

func (node *WildcardPat) Span() Span             { return node.span }
func (node *WildcardPat) InferredType() Type     { return node.inferredType }
func (node *WildcardPat) SetInferredType(t Type) { node.inferredType = t }
