
[TestLexingKeywords - 1]
[]*parser.Token{
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:1},
            End:   ast.Location{Line:1, Column:3},
        },
        Type:  5,
        Value: "fn",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:4},
            End:   ast.Location{Line:1, Column:7},
        },
        Type:  6,
        Value: "var",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:8},
            End:   ast.Location{Line:1, Column:11},
        },
        Type:  7,
        Value: "val",
    },
}
---

[TestLexingOperators - 1]
[]*parser.Token{
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:1},
            End:   ast.Location{Line:1, Column:2},
        },
        Type:  23,
        Value: "+",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:3},
            End:   ast.Location{Line:1, Column:4},
        },
        Type:  24,
        Value: "-",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:5},
            End:   ast.Location{Line:1, Column:6},
        },
        Type:  25,
        Value: "*",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:7},
            End:   ast.Location{Line:1, Column:8},
        },
        Type:  26,
        Value: "/",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:9},
            End:   ast.Location{Line:1, Column:10},
        },
        Type:  31,
        Value: "=",
    },
}
---

[TestLexingIdentifiers - 1]
[]*parser.Token{
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:1},
            End:   ast.Location{Line:1, Column:4},
        },
        Type:  4,
        Value: "foo",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:2, Column:1},
            End:   ast.Location{Line:2, Column:4},
        },
        Type:  4,
        Value: "bar",
    },
}
---

[TestLexingLiterals - 1]
[]*parser.Token{
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:1},
            End:   ast.Location{Line:1, Column:7},
        },
        Type:  1,
        Value: "hello",
    },
}
---

[TestLexingParens - 1]
[]*parser.Token{
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:1},
            End:   ast.Location{Line:1, Column:2},
        },
        Type:  4,
        Value: "a",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:3},
            End:   ast.Location{Line:1, Column:4},
        },
        Type:  25,
        Value: "*",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:5},
            End:   ast.Location{Line:1, Column:6},
        },
        Type:  42,
        Value: "(",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:6},
            End:   ast.Location{Line:1, Column:7},
        },
        Type:  4,
        Value: "b",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:8},
            End:   ast.Location{Line:1, Column:9},
        },
        Type:  23,
        Value: "+",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:10},
            End:   ast.Location{Line:1, Column:11},
        },
        Type:  4,
        Value: "c",
    },
    &parser.Token{
        Span: ast.Span{
            Start: ast.Location{Line:1, Column:11},
            End:   ast.Location{Line:1, Column:12},
        },
        Type:  43,
        Value: ")",
    },
}
---
